package org.sevenstar.monitor.database.toolkit.jdbc.warp;

import java.sql.Connection;
import java.sql.ResultSet;
import java.sql.SQLException;
import java.sql.SQLWarning;
import java.sql.Statement;

import org.sevenstar.monitor.database.toolkit.jdbc.filter.IStatementFilter;

public class WrapperStatement implements Statement,IWrapperStatement {
	private Statement statement;
	private  WrapperConnection wrapperConnection;
    private WrapperStatement(){
    	//
    }
    public WrapperStatement(Statement statement){
        this.statement = statement;
    }

    public Statement getPlainStatement(){
    	return this.statement;
    }
	public void addBatch(String sql) throws SQLException {
		this.statement.addBatch(sql);
	}

	public void cancel() throws SQLException {
		this.statement.cancel();
	}

	public void clearBatch() throws SQLException {
		this.statement.clearBatch();
	}

	public void clearWarnings() throws SQLException {
		this.statement.clearWarnings();
	}

	public void close() throws SQLException {
		this.statement.close();
	}

	public boolean execute(String sql) throws SQLException {
		return this.getStatementFilter().execute(this.getPlainStatement(),sql);
 	}

	public boolean execute(String sql, int autoGeneratedKeys)
			throws SQLException {
 		return this.getStatementFilter().execute(this.getPlainStatement(),sql, autoGeneratedKeys);
	}

	public boolean execute(String sql, int[] columnIndexes) throws SQLException {
 		return this.getStatementFilter().execute(this.getPlainStatement(),sql, columnIndexes);
	}

	public boolean execute(String sql, String[] columnNames)
			throws SQLException {
 		return this.getStatementFilter().execute(this.getPlainStatement(),sql, columnNames);
	}

	public int[] executeBatch() throws SQLException {
 		return this.getStatementFilter().executeBatch(this.getPlainStatement());
	}

	public ResultSet executeQuery(String sql) throws SQLException {
 		return new WrapperResultSet(this.getStatementFilter().executeQuery(this.getPlainStatement(),sql));
	}

	public int executeUpdate(String sql) throws SQLException {
 		return this.getStatementFilter().executeUpdate(this.getPlainStatement(),sql);
	}

	public int executeUpdate(String sql, int autoGeneratedKeys)
			throws SQLException {
 		return this.getStatementFilter().executeUpdate(this.getPlainStatement(),sql, autoGeneratedKeys);
	}

	public int executeUpdate(String sql, int[] columnIndexes)
			throws SQLException {
 		return this.getStatementFilter().executeUpdate(this.getPlainStatement(),sql, columnIndexes);
	}

	public int executeUpdate(String sql, String[] columnNames)
			throws SQLException {
 		return this.getStatementFilter().executeUpdate(this.getPlainStatement(),sql, columnNames);
	}

	public Connection getConnection() throws SQLException {
 		return this.statement.getConnection();
	}

	public int getFetchDirection() throws SQLException {
 		return this.statement.getFetchDirection();
	}

	public int getFetchSize() throws SQLException {
 		return this.statement.getFetchSize();
	}

	public ResultSet getGeneratedKeys() throws SQLException {
 		 ResultSet rs =this.statement.getGeneratedKeys();
 		 if(rs != null){
				return new WrapperResultSet(rs);
			}
			return null;
	}

	public int getMaxFieldSize() throws SQLException {
 		return this.statement.getMaxFieldSize();
	}

	public int getMaxRows() throws SQLException {
 		return this.statement.getMaxRows();
	}

	public boolean getMoreResults() throws SQLException {
 		return this.statement.getMoreResults();
	}

	public boolean getMoreResults(int current) throws SQLException {
 		return this.statement.getMoreResults(current);
	}

	public int getQueryTimeout() throws SQLException {
 		return this.statement.getQueryTimeout();
	}

	public ResultSet getResultSet() throws SQLException {
 		ResultSet rs = this.statement.getResultSet();
 		 if(rs != null){
				return new WrapperResultSet(rs);
			}
			return null;
	}

	public int getResultSetConcurrency() throws SQLException {
 		return this.statement.getResultSetConcurrency();
	}

	public int getResultSetHoldability() throws SQLException {
 		return this.statement.getResultSetHoldability();
	}

	public int getResultSetType() throws SQLException {
 		return this.statement.getResultSetType();
	}

	public int getUpdateCount() throws SQLException {
 		return this.statement.getUpdateCount();
	}

	public SQLWarning getWarnings() throws SQLException {
 		return this.statement.getWarnings();
	}

	public void setCursorName(String name) throws SQLException {
		this.statement.setCursorName(name);
	}

	public void setEscapeProcessing(boolean enable) throws SQLException {
		this.statement.setEscapeProcessing(enable);
	}

	public void setFetchDirection(int direction) throws SQLException {
		this.statement.setFetchDirection(direction);
	}

	public void setFetchSize(int rows) throws SQLException {
		this.statement.setFetchSize(rows);
	}

	public void setMaxFieldSize(int max) throws SQLException {
		this.statement.setMaxFieldSize(max);
	}

	public void setMaxRows(int max) throws SQLException {
		this.statement.setMaxRows(max);
	}

	public void setQueryTimeout(int seconds) throws SQLException {
		this.statement.setQueryTimeout(seconds);
	}
	public IStatementFilter getStatementFilter() {
		return this.getWrapperConnection().getStatementFilter();
	}

	public WrapperConnection getWrapperConnection() {
		return this.wrapperConnection;
	}
	public void setWrapperConnection(WrapperConnection wrapperConnection) {
		 this.wrapperConnection = wrapperConnection;
	}

}
